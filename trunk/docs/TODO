
// ----- library -----

- cleanup api
  there were a lot of haphazard and impulsive coding in the beginning.
  cleanup and keep to one coding style, and keep to it..
  specialize, and take advantage of that

- src subdirectories
  /mod, modules, aka dsp...
  /op, operators, for script
  /par, parameters
  /wdg, widgets

- axConfig
  use AX_LINUX, AX_WIN32, etc, everywhere
  define in f.ex axGlobals, or axDefines...
  (mainly a search/replace job)

- axMutex
  lock down things that might be dangerous if accessed by two (or more) simultaneous threads
  but tru to keep things as lock-free as possible (a clock-cycle waiting for a lock is a clock-cycle wasted)

// ----- plugin -----

- prgrams & banks
  move vst specific program/bank handling to axPluginVst
  add generic/portable  wrappers to axPlugin
  - axProgram
  - axBank

- axPluginImpl
  ladspa, dssi, lv2, pd external, (standalone?)

- axHost
  enumerate host caps + info at startup
  defined constants for hosts
  (things that need host-specific handling, like window resizing)
  extensions (reaper)
  for things like callbacks back into the host

- axParameter
  more parameter derived classes
  parBool, parMs, parDb
  squared, cubed, inverse (1/x, reciprocal?)
  this is mainly a getValue() override (doGetParameter calls getValue)

// ----- gui -----

- stricter onChange/onRedraw separation
  - onChange, internal value/state changed, no redraw
  - onRedraw, redrawing only

- merge axWidget & axContainer
  widget can be appended to any other widget to create composite things

- hovering
  in axContainer, mouse cursor change,
  notify widget on enter/leave

- mouse cursor
  setMousePos(point), restrictMouse(rect)
  change mouse cursor when hovering over widgets
  hide when dragging knobs, etc.

- streamline widget set
  - wdgLabel
  - wdgShape
  - wdgButton
  - wdgKnob
  - wdgSlider
  :
  - wdgPanel
  - wdgGroupBox
  - wdgScrollBox
  - wdgTabs
  :
  - wdgSizer

- axPen/axBrush
  can we set new color without needing to destroy the old pen and create a new one?
  too bad if gradients, or pixel stuff, need a bunch of pens...
  we could use axBitmap, and draw pixels manually, but we have to be careful about rgba ordering

- axEditor
  some more, tiresome repetitive things could be handled by the editor
  widget/parameter connectioins
  message-passing to listeners

- axSynth, axEffect
  one step up the class-hierarchy ladder.
  handle repetitive and boring things

// ----- other -----

- lit: more plugins js -> ax

- doxy: short js -> ax tutor

- dsp classes, dsp graph
  combine with axModule, axGraph ??

- dspInterpolate - more methods

- axScript <-> axModule
  operator <-> module

- axSingleton
  encapsulate global things inside a singleton
  window class registration...
